openapi: 3.0.3
info:
  title: Swagger Restaurants
  version: 1.0.0
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://localhost:8080
    description: Local server

tags:
  - name: Review
    description: All of reviews

paths:
  /review:
    get:
      operationId: findReviews
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginateReview'
    post:
      operationId: createReview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReview'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Error
        '422':
          description: Error on Validation
  /review/{id}:
    get:
      operationId: findReviewById
      parameters:
        - name: id
          in: path
          description: Review Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Error
        '404':
          description: Not Found Error
    put:
      operationId: updateReview
      parameters:
        - name: id
          in: path
          description: Review Id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReview'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Error
        '404':
          description: Not Found Error
        '422':
          description: Validation Error
    delete:
      operationId: deleteReview
      parameters:
        - name: id
          in: path
          description: Review Id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
        '400':
          description: Error

  /review/restaurant/{id}:
    get:
      operationId: searchReviewByRestaurantId
      parameters:
        - name: restaurantId
          in: path
          description: Restaurant Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginateReview'
        '400':
          description: Error
        '404':
          description: Not Found Error

components:
  schemas:
    Review:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Review ID
          example: 01ec2160-587e-4551-bc4a-3b65484058f8
        restaurantId:
          type: string
          format: uuid
          description: Restaurant ID
          example: 01ec2160-587e-4551-bc4a-3b65484058f8
        reviewerName:
          type: string
          minLength: 2
          description: Name of reviewer
        rating:
          type: integer
          minimum: 0
          maximum: 100
          description: Ratting of review
        comments:
          type: string
          description: Comments of review
        createdAt:
          type: string
          format: date-time
          example: "2024-10-01T10:00:00"
        updatedAt:
          type: string
          format: date-time
          example: "2024-10-01T10:00:00"
    PaginateReview:
      type: array
      items:
        $ref: "#/components/schemas/Review"
    CreateReview:
      required:
        - restaurantId
        - reviewerName
        - rating
      type: object
      properties:
        restaurantId:
          type: string
          format: uuid
          description: Restaurant ID
          example: 01ec2160-587e-4551-bc4a-3b65484058f8
        reviewerName:
          type: string
          minLength: 2
          description: Name of reviewer
        rating:
          type: integer
          minimum: 0
          maximum: 100
          description: Ratting of review
        comments:
          type: string
          description: Comments of review
    UpdateReview:
      required:
        - reviewerName
        - rating
        - comments
      type: object
      properties:
        reviewerName:
          type: string
          minLength: 2
          description: Name of reviewer
        rating:
          type: integer
          minimum: 0
          maximum: 100
          description: Ratting of review
        comments:
          type: string
          description: Comments of review